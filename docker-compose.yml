version: '3'

services:
  proxy:
    image: traefik:v2.4.2
    container_name: proxy_engine
    command: 
      # - "--log.level=DEBUG"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true" # Don't do that in production
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      # add pilot token service
      # - "--pilot.token=3d1bd97f-cb9d-4cde-8112-77ce2f5abc92"
      # install plugin rewrite body
      # - "--experimental.plugins.plugin-rewrite.modulename=github.com/traefik/plugin-rewritebody"
      # - "--experimental.plugins.plugin-rewrite.version=v0.3.1"
    labels: {}
      # Create basics middlewares
      # - "traefik.http.middlewares.my-auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
      # - "traefik.http.middlewares.my-compress.compress=true"
      # - "traefik.http.middlewares.my-header.headers.customresponseheaders.X-Custom-Response-Header=cinema"
      # Create middlewares for plugins
      # - "traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.lastModified=true"
      # - "traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.rewrites[0].regex=ID"
      # - "traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.rewrites[0].replacement=MY-ID"
    volumes:
      - type : bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - eco-system


  services-auth:
    build: auth 
    container_name: services-auth 
    restart: always
    command: 
      - "-serverPort"
      - "4000"
    ports:
      - '4000:4000'
    networks:
      - eco-system
    labels: 
      # Enable public access
      - "traefik.http.routers.services-auth.rule=PathPrefix(`/v1/auth/`)"
      - "traefik.http.services.services-auth.loadbalancer.server.port=4000"
    environment:
      - DB_HOST=db-postgresql
      - DB_PORT=5432
      - DB_NAME=auth_services
      - DB_USER=syx_hack
      - DB_PASS=syx_hacker
      - DB_SSL=false
      - JWT_KEY="H@CkMe#IfYou!Can"
      - APP_DEBUG=true
    links:
      - db-postgresql

  db-postgresql: 
    image: postgres:14.1-alpine
    restart: always
    container_name: db-postgresql
    environment:
      - POSTGRES_USER=syx_hack
      - POSTGRES_PASSWORD=syx_hacker
      - POSTGRES_DB=auth_services
    ports:
      - '5432:5432'
    volumes:
      - db-postgresql:/var/lib/postgresql/data
    networks:
      - eco-system

volumes:
  db-postgresql:
    driver: local

networks:
  eco-system:
    driver: bridge
    driver_opts: 
      com.docker.network.enable_ipv6: "false"